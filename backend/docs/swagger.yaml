definitions:
  models.AddUser:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  models.AuthUser:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.DeleteUser:
    properties:
      password:
        type: string
      uuid:
        type: string
    required:
    - password
    - uuid
    type: object
  models.GetTasks:
    properties:
      class:
        type: integer
      subject:
        type: string
    type: object
  models.Task:
    properties:
      answer:
        type: string
      class:
        type: string
      created_by:
        type: string
      description:
        type: string
      name:
        type: string
      photo:
        type: string
      solution:
        type: string
      source:
        type: string
      subject:
        type: string
      uuid:
        type: string
    type: object
info:
  contact: {}
paths:
  /task/create_task:
    post:
      consumes:
      - application/json
      description: Создает новую задачу
      parameters:
      - description: Данные задачи
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.Task'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать задачу
      tags:
      - task
  /task/get_tasks:
    post:
      consumes:
      - application/json
      description: Получает задачу
      parameters:
      - description: Предмет и класс
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.GetTasks'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetTasks'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить все задачи
      tags:
      - tasks
  /user/create_user:
    post:
      consumes:
      - application/json
      description: Создаёт нового пользователя
      parameters:
      - description: Данные пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.AddUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.AddUser'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать пользователя
      tags:
      - user
  /user/delete_user:
    delete:
      consumes:
      - application/json
      description: Удаляет пользователя по UUID
      parameters:
      - description: UUID пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.DeleteUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удалить пользователя
      tags:
      - user
  /user/login_user:
    post:
      consumes:
      - application/json
      description: Позволяет пользователю войти в систему
      parameters:
      - description: Данные для входа
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.AuthUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthUser'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Вход пользователя
      tags:
      - user
swagger: "2.0"
